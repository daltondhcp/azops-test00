{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "input": {
      "value": {
        "Name": "b038afec-7ce0-4652-8a45-5f92033a7335",
        "ResourceType": "Microsoft.Authorization/policyDefinitions",
        "Properties": {
          "Description": null,
          "DisplayName": "AKS Test Policy",
          "Metadata": {},
          "Mode": "Microsoft.Kubernetes.Data",
          "Parameters": {
            "effect": {
              "type": "String",
              "metadata": {
                "displayName": "Effect",
                "description": "'audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'deny' blocks the non-compliant resource creation or update. 'disabled' turns off the policy."
              },
              "allowedValues": [
                "audit",
                "deny",
                "disabled"
              ],
              "defaultValue": "audit"
            },
            "excludedNamespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace exclusions",
                "description": "List of Kubernetes namespaces to exclude from policy evaluation."
              },
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc"
              ]
            },
            "namespaces": {
              "type": "Array",
              "metadata": {
                "displayName": "Namespace inclusions",
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
              },
              "defaultValue": []
            },
            "labelSelector": {
              "type": "Object",
              "metadata": {
                "displayName": "Kubernetes label selector",
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
              },
              "defaultValue": {},
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  },
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "PolicyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.ContainerService/managedClusters"
              ]
            },
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "templateInfo": {
                  "sourceType": "Base64Encoded",
                  "content": "YXBpVmVyc2lvbjogdGVtcGxhdGVzLmdhdGVrZWVwZXIuc2gvdjFiZXRhMQpraW5kOiBDb25zdHJhaW50VGVtcGxhdGUKbWV0YWRhdGE6CiAgbmFtZTogdGVzdDIKc3BlYzoKICBjcmQ6CiAgICBzcGVjOgogICAgICBuYW1lczoKICAgICAgICBraW5kOiBUZXN0MgogIHRhcmdldHM6CiAgICAtIHRhcmdldDogYWRtaXNzaW9uLms4cy5nYXRla2VlcGVyLnNoCiAgICAgIHJlZ286IHwKICAgICAgICBwYWNrYWdlIHRlc3QyCgogICAgICAgIHZpb2xhdGlvblt7Im1zZyI6IG1zZywgImRldGFpbHMiOiB7fX1dIHsKICAgICAgICAgICAgYyA6PSBpbnB1dF9jb250YWluZXJzW19dCiAgICAgICAgICAgIGMuc2VjdXJpdHlDb250ZXh0LnByaXZpbGVnZWQKICAgICAgICAgICAgbXNnIDo9IHNwcmludGYoIlByaXZpbGVnZWQgY29udGFpbmVyIGlzIG5vdCBhbGxvd2VkOiAldiwgc2VjdXJpdHlDb250ZXh0OiAldiIsIFtjLm5hbWUsIGMuc2VjdXJpdHlDb250ZXh0XSkKICAgICAgICB9CgogICAgICAgIGlucHV0X2NvbnRhaW5lcnNbY10gewogICAgICAgICAgICBjIDo9IGlucHV0LnJldmlldy5vYmplY3Quc3BlYy5jb250YWluZXJzW19dCiAgICAgICAgfQoKICAgICAgICBpbnB1dF9jb250YWluZXJzW2NdIHsKICAgICAgICAgICAgYyA6PSBpbnB1dC5yZXZpZXcub2JqZWN0LnNwZWMuaW5pdENvbnRhaW5lcnNbX10KICAgICAgICB9Cg=="
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ],
                "namespaces": "[parameters('namespaces')]",
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "labelSelector": "[parameters('labelSelector')]"
              }
            }
          }
        }
      }
    }
  }
}
